= render partial: 'problem_header'
%p Vines

%p
  "There's been an accident at the main lab!", yells a researcher. As the researchers scramble to their cars, George can't help his curiosity and desire to help, so he decides to head to the lab himself. 
  %br
  %br
  Between George and the main laboratory, there is a jungle full of vines. George can swing from vine to vine to travel through the jungle. George has a choice of 3 vines to start from, and can select one vine from three at every vine. In other words, each vine has exactly 3 "child" vines. Each of these vines are equidistant from the "parent" vine. No child vine has multiple parents. The vines all terminate at the same depth. At some depth, all vines will have no children. A path that ends in such a vine is a valid path. 
  %br
  %br
  When George swings on a vine, he travels a distance equal to the length of the vine. Your task is to help George find the longest path through the jungle, as this would help reach his destination in the least time. 
  %br
  %br
  However, some vines are actually snakes in disguise! In the following criteria, distance travelled is the total distance travelled by swinging on all of the previous vines in the path and the length of the current vine. A vine is a snake if: 
  %br
  1) distance travelled is divisible by 7 
  %br
  2) distance travelled is a prime greater than 6 
  %br
  3) the sum of the lengths of this vine and the previous two vines is 6,9, or 16 
  %br
  %br
  A path cannot have a snake in it. 
  %br
  %br
  You will be given the vines as input in the following format:
  %br
  (vine_number, vine_length, left_child_number, centre_child_number, right_child_number)
  %br
  A vine with no children will have zeros in the last three spots. 
  %br
  %br
  You must enter the longest distance.


%h2 Sample Problem
%h4 Vines
.data
  %code
    (1,4,4,5,6)
    %br
    (2,7,7,8,9)
    %br
    (3,7,10,11,12)
    %br
    (4,3,13,14,15)
    %br
    (5,4,16,17,18)
    %br
    (6,6,19,20,21)
    %br
    (7,5,22,23,24)
    %br
    (8,5,25,26,27)
    %br
    (9,4,28,29,30)
    %br
    (10,2,31,32,33)
    %br
    (11,3,34,35,36)
    %br
    (12,7,37,38,39)
    %br
    (13,2,0,0,0)
    %br
    (14,3,0,0,0)
    %br
    (15,6,0,0,0)
    %br
    (16,1,0,0,0)
    %br
    (17,3,0,0,0)
    %br
    (18,6,0,0,0)
    %br
    (19,1,0,0,0)
    %br
    (20,6,0,0,0)
    %br
    (21,8,0,0,0)
    %br
    (22,5,0,0,0)
    %br
    (23,3,0,0,0)
    %br
    (24,2,0,0,0)
    %br
    (25,7,0,0,0)
    %br
    (26,7,0,0,0)
    %br
    (27,8,0,0,0)
    %br
    (28,9,0,0,0)
    %br
    (29,1,0,0,0)
    %br
    (30,4,0,0,0)
    %br
    (31,3,0,0,0)
    %br
    (32,6,0,0,0)
    %br
    (33,5,0,0,0)
    %br
    (34,8,0,0,0)
    %br
    (35,5,0,0,0)
    %br
    (36,9,0,0,0)
    %br
    (37,7,0,0,0)
    %br
    (38,2,0,0,0)
    %br
    (39,1,0,0,0)
    %br
    X

%h4 Solution
.data
  %code
    18


%h2 Actual Problem
%h4 Vines
.data
  %code
    - @prob[:lines].each do |word|
      = word
      %br

= render partial: 'submit'
